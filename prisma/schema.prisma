// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// 記事情報の格納、主に管理用
model Articles {
  id           Int@  id @default(autoincrement())
  user_id      Int @unique
  title        String
  name         String
  jp_name      String
  preview　　　Int
  release_flg  Boolean
  updated_at   DateTime              @default(now())
  post_at      DateTime              @default(now())
  created_at   DateTime              @default(now())
  images       Images[]
  sentence_enable_flg          Boolean
  monsters     Monsters?
  tags         ArticleTags[]
  appearances  ArticleAppearances[]
  memo         String
  user         Users?        @relation(fields: [user_id], references: [id])
}

// 記事の詳細管理（AI生成あり）
model Monsters {
  id                  Int       @id @default(autoincrement())
  article             Articles  @relation(fields: [article_id], references: [id])
  article_id          Int       @unique
  name                String
  jp_name             String
  size                String
  weight              String
  habitat             String
  strength_value      Int
  magic_power_value   Int
  intelligence_value  Int
  risk_value          Int
  rarity_value        Int
  trait_text          String
  root_text           String
  other_text          String
  updated_at          DateTime  @default(now())
  created_at          DateTime  @default(now())
}

// 画像情報（AI生成あり）
model Images {
  id           Int       @id @default(autoincrement())
  path         String
  alt          String
  created_at   DateTime  @default(now())
  article      Articles  @relation(fields: [article_id], references: [id])
  article_id   Int       // 外部キー
}

// ユーザー情報
model Users {
  id          Int       @id @default(autoincrement())
  username    String
  created_at  DateTime  @default(now())
  articles    Articles?
}

// タグ情報
model Tags {
  id          Int           @id @default(autoincrement())
  name        String
  jp_name     String
  created_at  DateTime      @default(now())
  articleTags ArticleTags[]
}

// テスト用
model Templates {
  id          Int       @id @default(autoincrement())
  column      String
  created_at  DateTime  @default(now())
}

// ブログタグ中間テーブル
model ArticleTags {
  id          Int       @id @default(autoincrement())
  article     Articles  @relation(fields: [article_id], references: [id])
  article_id  Int
  main_flg    Boolean
  tags        Tags      @relation(fields: [tag_id], references: [id])
  tag_id      Int
}

// 登場作品テーブル
model ArticleAppearances {
  id              Int             @id @default(autoincrement())
  articles        Articles        @relation(fields: [article_id], references: [id])
  article_id      Int
  appearances     Appearances     @relation(fields: [appearance_id], references: [id])
  appearance_id   Int
}

// ブログ登場作品中間テーブル
model Appearances {
  id                  Int                   @id @default(autoincrement())
  name                String
  jp_name             String
  created_at          DateTime              @default(now())
  articleAppearances  ArticleAppearances[]
}

// AIテキスト管理テーブル
model Sentences {
  id                  Int       @id @default(autoincrement())
  sentence            String
  enable_flg          Boolean
  created_at          DateTime  @default(now())
}

// 設定テーブル
model Configs {
  id                  Int       @id @default(autoincrement())
  username            String
  updated_at          DateTime  @default(now())
  created_at          DateTime  @default(now())
}
